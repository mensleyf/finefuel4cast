#loading data and pcks
if (!require("pacman")) install.packages("pacman"); library(pacman)
p_load(dplyr, gstat,stringr,raster,rstudioapi, rgdal, spacetime,ape,FRK,glmnet,install = TRUE, update = getOption("pac_update"), character.only = FALSE)
current_path <-getActiveDocumentContext()$path
output<-paste0(dirname(dirname(current_path)), "/prod_model_outputs/")
## ---------------------------------------- MAPE,MSPE,MBIAS ---------------------------------
options(scipen = 999)
month<-"march"
#loading data and pcks
if (!require("pacman")) install.packages("pacman"); library(pacman)
p_load(dplyr, gstat,stringr,raster,rstudioapi, rgdal, spacetime,ape,FRK,glmnet,install = TRUE, update = getOption("pac_update"), character.only = FALSE)
current_path <-getActiveDocumentContext()$path
output<-paste0(dirname(dirname(current_path)), "/prod_model_outputs/")
## ---------------------------------------- MAPE,MSPE,MBIAS ---------------------------------
options(scipen = 999)
month<-"march"
space_only_predictions<-readRDS(paste0(output,"z_", month, "_spatial_only_lm.rds"))
predictions_lm<-readRDS(paste0(output, "z_",month, "_forecast_lm.rds"))
predictions_clim<-readRDS(paste0(output, "z_",month, "_climate_lm.rds"))
predictions_noaa3month_lm<-readRDS(paste0(output,"z_", month, "_noaa3month_lm.rds"))
predictions_climate_and_ndvi<-readRDS(paste0(output,"z_", month, "_climate_and_ndvi_lm.rds"))
df_names<-paste0(names(space_only_predictions[[1]]), rep(seq(1987,2020,1),each=6))
resids_sp_mat<-space_only_predictions[[5]]; names(resids_sp_mat)<-df_names
resids_lm_mat<-predictions_lm[[5]]; names(resids_lm_mat)<-df_names
resids_clim_mat<-predictions_clim[[5]]; names(resids_clim_mat)<-df_names
resids_noaa_mat<-predictions_noaa3month_lm[[5]]; names(resids_noaa_mat)<-df_names
resids_clim_ndvi_mat<-predictions_climate_and_ndvi[[5]]; names(resids_clim_ndvi_mat)<-df_names
current_path
df_names<-paste0(names(space_only_predictions[[1]]), rep(seq(1987,2020,1),each=6))
resids_sp_mat<-space_only_predictions[[5]]; names(resids_sp_mat)<-df_names
resids_lm_mat<-predictions_lm[[5]]; names(resids_lm_mat)<-df_names
resids_clim_mat<-predictions_clim[[5]]; names(resids_clim_mat)<-df_names
resids_noaa_mat<-predictions_noaa3month_lm[[5]]; names(resids_noaa_mat)<-df_names
resids_clim_ndvi_mat<-predictions_climate_and_ndvi[[5]]; names(resids_clim_ndvi_mat)<-df_names
mape_fnc<-function(data) {mean(as.vector(abs(data)))}
mspe_fnc<-function(data) {mean(as.vector(data)^2)}
mbias_fnc<-function(data) {mean(as.vector(data))}
sp_mape<-apply(X= resids_sp_mat,2, FUN=mape_fnc)
sp_mspe<-apply(X= resids_sp_mat,2, FUN=mspe_fnc)
sp_mbias<-apply(X= resids_sp_mat,2, FUN=mbias_fnc)
real_mape<-apply(X= resids_lm_mat,2, FUN=mape_fnc)
real_mspe<-apply(X= resids_lm_mat,2, FUN=mspe_fnc)
real_mbias<-apply(X= resids_lm_mat,2, FUN=mbias_fnc)
clim_mape<-apply(X= resids_clim_mat,2, FUN=mape_fnc)
clim_mspe<-apply(X= resids_clim_mat,2, FUN=mspe_fnc)
clim_mbias<-apply(X= resids_clim_mat,2, FUN=mbias_fnc)
noaa_mape<-apply(X= resids_noaa_mat,2, FUN=mape_fnc)
noaa_mspe<-apply(X= resids_noaa_mat,2, FUN=mspe_fnc)
noaa_mbias<-apply(X= resids_noaa_mat,2, FUN=mbias_fnc)
clim_and_ndvi_mape<-apply(X= resids_clim_ndvi_mat,2, FUN=mape_fnc)
clim_and_ndvi_mspe<-apply(X= resids_clim_ndvi_mat,2, FUN=mspe_fnc)
clim_and_ndvi_mbias<-apply(X= resids_clim_ndvi_mat,2, FUN=mbias_fnc)
mape<-cbind(sp_mape,real_mape,clim_mape,clim_and_ndvi_mape,noaa_mape,seq(1987,2020,1))
colMeans(mape)
mspe<-cbind(sp_mspe,real_mspe,clim_mspe,clim_and_ndvi_mspe,noaa_mspe,seq(1987,2020,1))
colMeans(mspe)
mbias<-cbind(sp_mbias,real_mbias,clim_mbias,clim_and_ndvi_mbias, noaa_mbias,seq(1987,2020,1))
colMeans(mbias)
par(mfrow=c(1,1))
# Figure 4
# png(paste0(dirname(current_path), "/march_vis/mape.png"))
plot(mape[,6],mape[,1], 'l',ylim=c(.35,1.75),  main= "Prediction Error by model", col="black", cex.main=3,
lwd=2,
ylab= "Mean Absolute Predictive Error (standardized)",
xlab="Year", cex.lab=1.5)
lines(mape[,6],mape[,2], 'l', col="blue",lwd=3)
lines(mape[,6],mape[,3], 'l', col="red", lwd=2)
lines(mape[,6],mape[,4], 'l', col="purple",lwd=2)
legend("topleft", pch=19,legend=c("null model", "forecast", "clim", "clim_and_ndvi"),
col=c("black","blue","red", "purple"), cex=2)
# png(paste0(dirname(current_path), "/march_vis/mspe.png"))
plot(mspe[,6],mspe[,1], 'l',ylim=c(0,3),  main= "Mean Squared Predictive Error")
lines(mspe[,6],mspe[,2], 'l',ylim=c(0,.5), col="blue")
lines(mspe[,6],mspe[,3], 'l',ylim=c(0,.5), col="red")
lines(mspe[,6],mspe[,4], 'l',ylim=c(0,.5), col="purple")
legend("topright", pch=19,legend=c("spatial only/null model", "forecast", "clim", "clim_and_ndvi"), col=c("black","blue","red", "purple"))
# dev.off()
#
# png(paste0(dirname(current_path), "/march_vis/mean_bias.png"))
plot(mbias[,6],mbias[,1], 'l',ylim=c(-1,1.5), main= "Mean Prediction Bias")
lines(mbias[,6],mbias[,2], 'l',ylim=c(-.5,.5), col="blue")
lines(mbias[,6],mbias[,3], 'l',ylim=c(-.5,.5), col="red")
lines(mbias[,6],mbias[,4], 'l',ylim=c(-.5,.5), col="purple")
legend("topright", pch=19,legend=c("spatial only/null model", "forecast", "clim", "clim_and_ndvi"), col=c("black","blue","red", "purple"))
# dev.off()
# dev.off()
#loading data and pcks
if (!require("pacman")) install.packages("pacman"); library(pacman)
p_load(dplyr, gstat,stringr,raster,rstudioapi, rgdal, spacetime,ape,FRK,glmnet,install = TRUE, update = getOption("pac_update"), character.only = FALSE)
month<-"march"
current_path <-getActiveDocumentContext()$path
mod_outputs<-paste0(dirname(dirname(current_path)), "/prod_model_outputs/")
fold_vis<-paste0(dirname(dirname(current_path)), "/figures/", month, "_vis/")
options(scipen = 999)
month<-"march"
pred1<-readRDS(paste0(mod_outputs, "/", month, "_forecast_lm.rds"))
pred1<-readRDS(paste0(mod_outputs, "/", month, "_forecast_lm.rds"))
pred1<-readRDS(paste0(mod_outputs, "/", month, "_forecast_lm.rds"))
pred1<-readRDS(paste0(mod_outputs, "/", month, "_noaa3month_lm.rds"))
blm_states<-readOGR(paste0(dirname(dirname(current_path)), "/figures/gis_data/states.shp"))
blm_admin<-readOGR(paste0(dirname(dirname(current_path)), "/figures/gis_data/admin.shp"))
nYears<-34
## ----------------------------------------- Long Term Prod  ------------------------------------
df_names<-paste0(names(pred1[[1]]), rep(seq(1987,2019,1),each=6))
prod<-pred1$agb_m
cols1<-colorRampPalette(c("red", "yellow", "green"))
long_term_prod<-rowMeans(prod)
max_val<-max(long_term_prod)
min_val<-round(min(long_term_prod),2)
l<-seq(round(min_val,2),round(max_val,2),.01)
col_df<-data.frame(c_val=l,color.name=cols1(length(l)))
avg_agb_round<-as.data.frame(round(long_term_prod,2));names(avg_agb_round)<-"avg_agb_round"
avg_agb_round$long<-pred1$coord_df$long
avg_agb_round$lat<-pred1$coord_df$lat
long_term_prod2<-merge(avg_agb_round,col_df, by.x=as.character("avg_agb_round"), by.y=as.character("c_val"), all.x=TRUE)
order_df<-long_term_prod2[order(long_term_prod2$avg_agb_round),]
leg1<-as.data.frame(matrix(NA, nrow=3,ncol=2))
leg1[1,]<-c(order_df$avg_agb_round[1], order_df$color.name[1])
leg1[2,]<-c(order_df$avg_agb_round[round(nrow(order_df)*2/5,0)], order_df$color.name[round(nrow(order_df)*2/5,0)])
leg1[3,]<-c(order_df$avg_agb_round[round(nrow(order_df)*3/5,0)], order_df$color.name[round(nrow(order_df)*3/5,0)])
leg1[4,]<-c(order_df$avg_agb_round[round(nrow(order_df)*4/5,0)], order_df$color.name[round(nrow(order_df)*4/5,0)])
leg1[5,]<-c(order_df$avg_agb_round[(nrow(order_df))], order_df$color.name[(nrow(order_df))])
sp<-long_term_prod2
sp$lat<-as.numeric(sp$lat)
sp$long<-as.numeric(sp$long)
coordinates(sp)<-~long+lat
sp@proj4string<-CRS("+init=epsg:4326")
png(paste0(dirname(dirname(current_path)), "/figures/mean_prod.png"))
layout(matrix(1:2,nrow=1),widths=c(0.8,0.2))
plot('n',x=sp$long,y=sp$lat,xlab="",
ylab="", main="Mean productivity 1986-2020", xlim=c(-123,-110),ylim=c(33,50),
yaxt="none",xaxt="none")
print(abline(h = 30, col = "lightblue", lwd = 800))
print(abline(h = 50, col = "wheat", lwd = 200))
points(x=sp$long,y=sp$lat, pch=15, cex=.7,col=sp$color.name)
plot(blm_admin, col="lightgray",xlim=c(-123,-110),ylim=c(33,50), add=TRUE)
points(x=sp$long,y=sp$lat,
pch=15, cex=.8,col=sp$color.name, xlim=c(-123,-110),ylim=c(33,50))
lines(blm_admin, col="gray")
lines(blm_states,col="darkgray")
par(mar=c(5.1,4.1,4.1,2.1))
xl <- 1;yb <- 1;xr <- 1.5;yt <- 2
par(mar=c(5.1,0.5,4.1,0.5))
plot(NA,type="n",ann=FALSE,xlim=c(1,2),ylim=c(1,2),xaxt="n",yaxt="n",bty="n")
rect(
xl,
head(seq(yb,yt,(yt-yb)/10),-1),
xr,
tail(seq(yb,yt,(yt-yb)/10),-1),
col=cols1(10)
)
q10<-round(quantile(col_df$c_val,seq(0,.9,.1)),1)
mtext(q10,side=2,at=tail(seq(yb,yt,(yt-yb)/10),-1)-0.05,las=2,cex=0.7)
dev.off()
# png(paste0(dirname(dirname(current_path)), "/figures/mean_prod.png"))
layout(matrix(1:2,nrow=1),widths=c(0.8,0.2))
plot('n',x=sp$long,y=sp$lat,xlab="",
ylab="", main="Mean productivity 1986-2020", xlim=c(-123,-110),ylim=c(33,50),
yaxt="none",xaxt="none")
print(abline(h = 30, col = "lightblue", lwd = 800))
print(abline(h = 50, col = "wheat", lwd = 200))
points(x=sp$long,y=sp$lat, pch=15, cex=.7,col=sp$color.name)
plot(blm_admin, col="lightgray",xlim=c(-123,-110),ylim=c(33,50), add=TRUE)
points(x=sp$long,y=sp$lat,
pch=15, cex=.8,col=sp$color.name, xlim=c(-123,-110),ylim=c(33,50))
lines(blm_admin, col="gray")
lines(blm_states,col="darkgray")
par(mar=c(5.1,4.1,4.1,2.1))
xl <- 1;yb <- 1;xr <- 1.5;yt <- 2
par(mar=c(5.1,0.5,4.1,0.5))
plot(NA,type="n",ann=FALSE,xlim=c(1,2),ylim=c(1,2),xaxt="n",yaxt="n",bty="n")
rect(
xl,
head(seq(yb,yt,(yt-yb)/10),-1),
xr,
tail(seq(yb,yt,(yt-yb)/10),-1),
col=cols1(10)
)
q10<-round(quantile(col_df$c_val,seq(0,.9,.1)),1)
mtext(q10,side=2,at=tail(seq(yb,yt,(yt-yb)/10),-1)-0.05,las=2,cex=0.7)
## ----------------------------------------- Long Term prod SD  ------------------------------------
df_names<-paste0(names(pred1[[1]]), rep(seq(1987,2019,1),each=6))
prod<-pred1$agb_m
cols1<-colorRampPalette(c("yellow", "red"))
long_term_sd_prod<-apply(prod, 1,sd)
max_val<-max(long_term_sd_prod)
min_val<-0
l<-seq(round(min_val,2),round(max_val,2),.01)
col_df<-data.frame(c_val=l,color.name=cols1(length(l)))
avg_agb_round<-as.data.frame(round(long_term_sd_prod,2));names(avg_agb_round)<-"avg_agb_round"
avg_agb_round$long<-pred1$coord_df$long
avg_agb_round$lat<-pred1$coord_df$lat
long_term_sd_prod2<-merge(avg_agb_round,col_df, by.x=as.character("avg_agb_round"), by.y=as.character("c_val"), all.x=TRUE)
order_df<-long_term_sd_prod2[order(long_term_sd_prod2$avg_agb_round),]
leg1<-as.data.frame(matrix(NA, nrow=3,ncol=2))
leg1[1,]<-c(order_df$avg_agb_round[1], order_df$color.name[1])
leg1[2,]<-c(order_df$avg_agb_round[round(nrow(order_df)*2/5,0)], order_df$color.name[round(nrow(order_df)*2/5,0)])
leg1[3,]<-c(order_df$avg_agb_round[round(nrow(order_df)*3/5,0)], order_df$color.name[round(nrow(order_df)*3/5,0)])
leg1[4,]<-c(order_df$avg_agb_round[round(nrow(order_df)*4/5,0)], order_df$color.name[round(nrow(order_df)*4/5,0)])
leg1[5,]<-c(order_df$avg_agb_round[(nrow(order_df))], order_df$color.name[(nrow(order_df))])
leg1
sp<-long_term_sd_prod2
sp$lat<-as.numeric(sp$lat)
sp$long<-as.numeric(sp$long)
coordinates(sp)<-~long+lat
sp@proj4string<-CRS("+init=epsg:4326")
# png(paste0(dirname(dirname(current_path)), "/figures/mean_sd.png"))
layout(matrix(1:2,nrow=1),widths=c(0.8,0.2))
plot('n',x=sp$long,y=sp$lat,xlab="",
ylab="", main="Mean SD 1986-2020", xlim=c(-123,-110),ylim=c(33,50),
yaxt="none",xaxt="none")
print(abline(h = 30, col = "lightblue", lwd = 800))
print(abline(h = 50, col = "wheat", lwd = 200))
points(x=sp$long,y=sp$lat, pch=15, cex=.7,col=sp$color.name)
plot(blm_admin, col="lightgray",xlim=c(-123,-110),ylim=c(33,50), add=TRUE)
points(x=sp$long,y=sp$lat,
pch=15, cex=.8,col=sp$color.name, xlim=c(-123,-110),ylim=c(33,50))
lines(blm_admin, col="gray")
lines(blm_states,col="darkgray")
par(mar=c(5.1,4.1,4.1,2.1))
xl <- 1;yb <- 1;xr <- 1.5;yt <- 2
par(mar=c(5.1,0.5,4.1,0.5))
plot(NA,type="n",ann=FALSE,xlim=c(1,2),ylim=c(1,2),xaxt="n",yaxt="n",bty="n")
rect(
xl,
head(seq(yb,yt,(yt-yb)/10),-1),
xr,
tail(seq(yb,yt,(yt-yb)/10),-1),
col=cols1(10)
)
q10<-round(quantile(col_df$c_val,seq(0,.9,.1)),1)
mtext(q10,side=2,at=tail(seq(yb,yt,(yt-yb)/10),-1)-0.05,las=2,cex=0.7)
## ----------------------------------------- Mean Correlation; may forecast------------------------------------
for (month in c("march", "april", "may")){
fold_vis<-paste0(dirname(dirname(current_path)), "/figures/", month, "_vis/")
options(scipen = 999)
pred1<-readRDS(paste0(mod_outputs, "/", month, "_forecast_lm.rds"))
# doesn't work with spaital only since sd = 0
prod<-pred1$agb_m
preds_forecast<-pred1$prod_mean
forecast_corr<-vector()
for (i in 1:nrow(prod)){
forecast_corr[i]<-cor(preds_forecast[i,1:34],prod[i,1:34])
}
length(forecast_corr)
#check
# forecast_corr[3243]
# a<-((prod[3243,1:34]))
# b<-((preds_forecast[3243,1:34]))
# cor(a,b)
min_val<-round(min(forecast_corr),2)
max_val<-round(max(forecast_corr),2)
l1<-seq(round(min_val,2),0,.001)
l2<-seq(0,round(max_val,2),.001)
cols1<-colorRampPalette(c("green", "yellow"))
cols2<-colorRampPalette(c("yellow", "red"))
cols_new<-colorRampPalette(c("green", "yellow", "yellow2","red"))
col_df1<-data.frame(c_val=l1,color.name=cols1(length(l1)))
col_df2<-data.frame(c_val=l2,color.name=cols2(length(l2)))
col_df<-rbind(col_df1,col_df2)
#### standard legend
leg1<-matrix(nrow=5,ncol=2)
leg1[1,]<-c((min_val), subset(col_df, round(as.numeric(col_df$c_val),3)==(min_val))$color.name[1])
leg1[2,]<-c((-.10), subset(col_df, round(as.numeric(col_df$c_val),3)==(-.1))$color.name[1])
leg1[3,]<-c((0), subset(col_df, round(as.numeric(col_df$c_val),3)==(0))$color.name[1])
leg1[4,]<-c((.50), subset(col_df, round(as.numeric(col_df$c_val),3)==(.5))$color.name[1])
leg1[5,]<-c((.90), subset(col_df, round(as.numeric(col_df$c_val),3)==(.9))$color.name[1])
forecast_corr<-as.data.frame(as.character(round((forecast_corr),3))); names(forecast_corr)<-"round"
forecast_corr$long<-pred1$coord_df$long
forecast_corr$lat<-pred1$coord_df$lat
col_df$c_val<-as.character(round(as.numeric(col_df$c_val),3))
col_resid<-merge(forecast_corr, col_df, by.x="round",by.y="c_val",all.x=TRUE )
dim(col_resid)
sp<-col_resid;
coordinates(sp)<-~long+lat;  sp@proj4string<-CRS("+init=epsg:4326")
# png(paste0(fold_vis, "correlation", month, "_forecast.png"))
layout(matrix(1:2,nrow=1),widths=c(0.8,0.2))
print(plot('n',x=sp$long,y=sp$lat,xlab="",
ylab="", main=paste0("Correlation ", month," forecast model and productivity \n 1986-2020"), xlim=c(-123,-110),ylim=c(33,50),
yaxt="none",xaxt="none"))
print(abline(h = 30, col = "lightblue", lwd = 800))
print(abline(h = 50, col = "wheat", lwd = 200))
print(points(x=sp$long,y=sp$lat, pch=15, cex=.7,col=sp$color.name))
plot(blm_admin, col="lightgray",xlim=c(-123,-110),ylim=c(33,50), add=TRUE)
points(x=sp$long,y=sp$lat,
pch=15, cex=.7,col=sp$color.name, xlim=c(-123,-110),ylim=c(33,50))
lines(blm_admin, col="gray")
lines(blm_states,col="darkgray")
par(mar=c(5.1,4.1,4.1,2.1))
xl <- 1;yb <- 1;xr <- 1.5;yt <- 2
par(mar=c(5.1,0.5,4.1,0.5))
plot(NA,type="n",ann=FALSE,xlim=c(1,2),ylim=c(1,2),xaxt="n",yaxt="n",bty="n")
rect(
xl,
head(seq(yb,yt,(yt-yb)/10),-1),
xr,
tail(seq(yb,yt,(yt-yb)/10),-1),
col=cols_new(10)
)
q10<-round(quantile(as.numeric(col_df$c_val),seq(.1,1,.1)),1)
mtext(q10,side=2,at=tail(seq(yb,yt,(yt-yb)/10),-1)-0.05,las=2,cex=0.7)
dev.off()
}
## ----------------------------------------- Mean Correlation; may forecast------------------------------------
month<-"march"
fold_vis<-paste0(dirname(dirname(current_path)), "/figures/", month, "_vis/")
options(scipen = 999)
pred1<-readRDS(paste0(mod_outputs, "/", month, "_forecast_lm.rds"))
# doesn't work with spaital only since sd = 0
prod<-pred1$agb_m
preds_forecast<-pred1$prod_mean
forecast_corr<-vector()
for (i in 1:nrow(prod)){
forecast_corr[i]<-cor(preds_forecast[i,1:34],prod[i,1:34])
}
length(forecast_corr)
min_val<-round(min(forecast_corr),2)
max_val<-round(max(forecast_corr),2)
l1<-seq(round(min_val,2),0,.001)
l2<-seq(0,round(max_val,2),.001)
cols1<-colorRampPalette(c("green", "yellow"))
cols2<-colorRampPalette(c("yellow", "red"))
cols_new<-colorRampPalette(c("green", "yellow", "yellow2","red"))
col_df1<-data.frame(c_val=l1,color.name=cols1(length(l1)))
col_df2<-data.frame(c_val=l2,color.name=cols2(length(l2)))
col_df<-rbind(col_df1,col_df2)
leg1<-matrix(nrow=5,ncol=2)
leg1[1,]<-c((min_val), subset(col_df, round(as.numeric(col_df$c_val),3)==(min_val))$color.name[1])
leg1[2,]<-c((-.10), subset(col_df, round(as.numeric(col_df$c_val),3)==(-.1))$color.name[1])
leg1[3,]<-c((0), subset(col_df, round(as.numeric(col_df$c_val),3)==(0))$color.name[1])
leg1[4,]<-c((.50), subset(col_df, round(as.numeric(col_df$c_val),3)==(.5))$color.name[1])
leg1[5,]<-c((.90), subset(col_df, round(as.numeric(col_df$c_val),3)==(.9))$color.name[1])
forecast_corr<-as.data.frame(as.character(round((forecast_corr),3))); names(forecast_corr)<-"round"
forecast_corr$long<-pred1$coord_df$long
forecast_corr$lat<-pred1$coord_df$lat
col_df$c_val<-as.character(round(as.numeric(col_df$c_val),3))
col_resid<-merge(forecast_corr, col_df, by.x="round",by.y="c_val",all.x=TRUE )
dim(col_resid)
sp<-col_resid;
coordinates(sp)<-~long+lat;  sp@proj4string<-CRS("+init=epsg:4326")
# png(paste0(fold_vis, "correlation", month, "_forecast.png"))
layout(matrix(1:2,nrow=1),widths=c(0.8,0.2))
print(plot('n',x=sp$long,y=sp$lat,xlab="",
ylab="", main=paste0("Correlation ", month," forecast model and productivity \n 1986-2020"), xlim=c(-123,-110),ylim=c(33,50),
yaxt="none",xaxt="none"))
print(abline(h = 30, col = "lightblue", lwd = 800))
print(abline(h = 50, col = "wheat", lwd = 200))
print(points(x=sp$long,y=sp$lat, pch=15, cex=.7,col=sp$color.name))
plot(blm_admin, col="lightgray",xlim=c(-123,-110),ylim=c(33,50), add=TRUE)
points(x=sp$long,y=sp$lat,
pch=15, cex=.7,col=sp$color.name, xlim=c(-123,-110),ylim=c(33,50))
lines(blm_admin, col="gray")
lines(blm_states,col="darkgray")
par(mar=c(5.1,4.1,4.1,2.1))
xl <- 1;yb <- 1;xr <- 1.5;yt <- 2
par(mar=c(5.1,0.5,4.1,0.5))
plot(NA,type="n",ann=FALSE,xlim=c(1,2),ylim=c(1,2),xaxt="n",yaxt="n",bty="n")
rect(
xl,
head(seq(yb,yt,(yt-yb)/10),-1),
xr,
tail(seq(yb,yt,(yt-yb)/10),-1),
col=cols_new(10)
)
q10<-round(quantile(as.numeric(col_df$c_val),seq(.1,1,.1)),1)
mtext(q10,side=2,at=tail(seq(yb,yt,(yt-yb)/10),-1)-0.05,las=2,cex=0.7)
